// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/release": {
            "post": {
                "description": "Снятие резервирования с товар на складе",
                "consumes": [
                    "application/json"
                ],
                "summary": "Снятие резерва товара",
                "parameters": [
                    {
                        "description": "Список товаров для разрезервирования",
                        "name": "reserveOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.reserveOrderForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/reserve": {
            "post": {
                "description": "Зарезервировать товар на складе",
                "consumes": [
                    "application/json"
                ],
                "summary": "Зарезервирование товара",
                "parameters": [
                    {
                        "description": "Список товаров для резервирования",
                        "name": "reserveOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.reserveOrderForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/warehouse/{warehouse_id}/total": {
            "get": {
                "description": "Получить содержимое склада по идентификатору",
                "produces": [
                    "application/json"
                ],
                "summary": "Содержимое склада",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Склада",
                        "name": "warehouse_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.warehouseTotalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "http.placement": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "reserved": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "http.reserveOrder": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "reserve_count": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "http.reserveOrderForm": {
            "type": "object",
            "properties": {
                "reserve_order": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.reserveOrder"
                    }
                }
            }
        },
        "http.warehouseTotalResponse": {
            "type": "object",
            "properties": {
                "placement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.placement"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Storage API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
